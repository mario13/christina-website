// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.leiv.web;

import org.apache.commons.codec.binary.Base64;
import org.leiv.domain.General;
import org.leiv.domain.GeneralPK;
import org.leiv.domain.Project;
import org.leiv.domain.Users;
import org.leiv.domain.Work;
import org.leiv.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<General, String> ApplicationConversionServiceFactoryBean.getGeneralToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.leiv.domain.General, java.lang.String>() {
            public String convert(General general) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<GeneralPK, General> ApplicationConversionServiceFactoryBean.getIdToGeneralConverter() {
        return new org.springframework.core.convert.converter.Converter<org.leiv.domain.GeneralPK, org.leiv.domain.General>() {
            public org.leiv.domain.General convert(org.leiv.domain.GeneralPK id) {
                return General.findGeneral(id);
            }
        };
    }
    
    public Converter<String, General> ApplicationConversionServiceFactoryBean.getStringToGeneralConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.leiv.domain.General>() {
            public org.leiv.domain.General convert(String id) {
                return getObject().convert(getObject().convert(id, GeneralPK.class), General.class);
            }
        };
    }
    
    public Converter<Project, String> ApplicationConversionServiceFactoryBean.getProjectToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.leiv.domain.Project, java.lang.String>() {
            public String convert(Project project) {
                return new StringBuilder().append(project.getName()).append(' ').append(project.getDescription()).append(' ').append(project.getThumbnail()).append(' ').append(project.getYear()).toString();
            }
        };
    }
    
    public Converter<Integer, Project> ApplicationConversionServiceFactoryBean.getIdToProjectConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.leiv.domain.Project>() {
            public org.leiv.domain.Project convert(java.lang.Integer id) {
                return Project.findProject(id);
            }
        };
    }
    
    public Converter<String, Project> ApplicationConversionServiceFactoryBean.getStringToProjectConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.leiv.domain.Project>() {
            public org.leiv.domain.Project convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Project.class);
            }
        };
    }
    
    public Converter<Users, String> ApplicationConversionServiceFactoryBean.getUsersToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.leiv.domain.Users, java.lang.String>() {
            public String convert(Users users) {
                return new StringBuilder().append(users.getPassword()).append(' ').append(users.getName()).toString();
            }
        };
    }
    
    public Converter<String, Users> ApplicationConversionServiceFactoryBean.getIdToUsersConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.leiv.domain.Users>() {
            public org.leiv.domain.Users convert(java.lang.String id) {
                return Users.findUsers(id);
            }
        };
    }
    
    public Converter<Work, String> ApplicationConversionServiceFactoryBean.getWorkToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.leiv.domain.Work, java.lang.String>() {
            public String convert(Work work) {
                return new StringBuilder().append(work.getLink()).append(' ').append(work.getThumbnail()).append(' ').append(work.getDescription()).append(' ').append(work.getTitle()).toString();
            }
        };
    }
    
    public Converter<Integer, Work> ApplicationConversionServiceFactoryBean.getIdToWorkConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.leiv.domain.Work>() {
            public org.leiv.domain.Work convert(java.lang.Integer id) {
                return Work.findWork(id);
            }
        };
    }
    
    public Converter<String, Work> ApplicationConversionServiceFactoryBean.getStringToWorkConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.leiv.domain.Work>() {
            public org.leiv.domain.Work convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Work.class);
            }
        };
    }
    
    public Converter<String, GeneralPK> ApplicationConversionServiceFactoryBean.getJsonToGeneralPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.leiv.domain.GeneralPK>() {
            public GeneralPK convert(String encodedJson) {
                return GeneralPK.fromJsonToGeneralPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<GeneralPK, String> ApplicationConversionServiceFactoryBean.getGeneralPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<org.leiv.domain.GeneralPK, java.lang.String>() {
            public String convert(GeneralPK generalPK) {
                return Base64.encodeBase64URLSafeString(generalPK.toJson().getBytes());
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getGeneralToStringConverter());
        registry.addConverter(getIdToGeneralConverter());
        registry.addConverter(getStringToGeneralConverter());
        registry.addConverter(getProjectToStringConverter());
        registry.addConverter(getIdToProjectConverter());
        registry.addConverter(getStringToProjectConverter());
        registry.addConverter(getUsersToStringConverter());
        registry.addConverter(getIdToUsersConverter());
        registry.addConverter(getWorkToStringConverter());
        registry.addConverter(getIdToWorkConverter());
        registry.addConverter(getStringToWorkConverter());
        registry.addConverter(getJsonToGeneralPKConverter());
        registry.addConverter(getGeneralPKToJsonConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
